#alias c chat;
#alias * chat*;
#alias r reply;

#alias {lm} {
    map;
};

#alias {grep} {
    #grep %1;
};

#alias {le} {l east};
#alias {lw} {l west};
#alias {ls} {l south};
#alias {ln} {l north};

#alias {i} {
    #send {i %0};
    lock 总计;
};

#alias {sc} {
    #send {score %0};
    lock 内力修为;
};

#alias {jifa} {
    #send {jifa %0};
    lock 以下是你目前使用中的特殊技能;
};

#alias {lock} {
    #if {"%0" != ""} {
        #action {%0} {
            #action {^>} {
                #buffer lock;
                #unaction {^>}
            };
            #unaction {%0};
        };
    };
};

#alias {iall} {
    #echo {≡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━≡};
    #send {i ring};
    #send {i necklace};
    #send {i spear};
    #send {i staff};
    #send {i blade};
    #send {i shield};
    #send {i sword};
    #send {i whip};
    #send {i head};
    #send {i hands};
    #send {i waist};
    #send {i armor};
    #send {i cloth};
    #send {i boots};
    #send {i wrists};
    #send {i surcoat};
    #action {你身上id为surcoat的东西有下面这些} {
        #delay {0.5} {
            #echo {≡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━≡};
            #buffer lock;
        };
    };
};

#alias {heal.stop} {
    #unticker {heal};
};

#alias {heal.start} {
    #ticker {heal} {
        yun lifeheal %1;
        #edelay {2} {
            dazuo 100;
        };
    } {5};
};

#alias {on_hit} {
    #alias tmp_hit #cr;
    #alias tmp_hit %0;
    #action {你战胜了} {
        #unaction {你战胜了};
        #delay {2} {
            halt;
            tmp_hit;
        };
    };
};

#alias {on_dead} {
    #alias tmp_dead #cr;
    #alias tmp_dead %0;
    #action {死了} {
        #unaction {死了};
        #delay {2} {
            halt;
            tmp_dead;
        };
    } {1};
};

#alias {health.cancel} {
    #class health.inner kill;
    #alias tmp_health #cr;
    dz.cancel;
    tn.cancel;
};

#alias {on_health} {
    #alias tmp_health #cr;
    #alias tmp_health %0;
    #class health.inner open;
    #alias {check_qx} {
        #if {${qx_percent} < 99} {
            #if {${qx_percent} < 50} {
                yun lifeheal ${char_id};
            };
            #else {
                yun heal;
            }
            #delay {0.5} {
                check_qx;
            };
        };
        #else {
            check_js;
        };
    };
    #alias {check_js} {
        #if {${js_percent} < 99} {
            yun inspire;
            #delay {0.5} {
                check_js;
            };
        };
        #else {
            #class health.inner kill;
            re;
            chifan;
            #delay {0.5} {
                tmp_health;
            };
        };
    };

    #alias {check_all} {
        dz.full {
            tn.full {
                check_qx;
            };
        };
    };

    #class health.inner close;
    check_all;
};

#alias {on_sleep} {
    #alias sleep_action #cr;
    #alias sleep_action %0;
    #class on_wakeup.inner open;
    #action {翻来覆去无法入眠!} {
        #delay {sleep} {
            sleep;
        } {10};
    };
    #action {睡过一觉} {
        #delay {sleep} {
            sleep;
        } {10};
    };
    #action {你一觉醒来} {
        #class on_wakeup.inner kill;
        #delay {wakeup} {
            sleep_action;
        } {3};
    };
    #action {荡悠悠三更梦 -} {
        #class on_wakeup.inner kill;
        #delay {wakeup} {
            sleep_action;
        } {3};
    };
    #class on_wakeup.inner close;
    gt ${sleep_pos};
    on_there {
        sleep;
    };
};

#alias {log.save} {
    #system {cp debug${dot}${char_id}${dot}log ${char_id}${dot}log};
};

#alias {log.start} {
    #log overwrite debug${dot}${char_id}${dot}log;
    #debug all log;
    #var debug_info on;
    update_status;
};

#alias {log.stop} {
    #log off;
    #debug all off;
};

#alias {walk_to} {
    #var  direction %1;
    #var  action #cr;
    #alias {get_pos_done} {
        #list exits_list create ${exits_list};
        #if {@ismember{${direction};exits_list}} {
            @abbrev{${direction}};
        };
        #else {
            #foreach {${exits_list}[%*]} {exit} {
                #regexp {${exit}} {%*${direction}%*} {#var action ${exit}};
            };
            @abbrev{${action}};
        };
    };
    get_pos {
        get_pos_done;
    };
};

#macro {\e[1;3A} {#nop ];
walk_to north;
};
#macro {\e[1;3B} {#nop ];
walk_to south;
};
#macro {\e[1;3D} {#nop ];
walk_to west;
};
#macro {\e[1;3C} {#nop ];
walk_to east;
};

#alias {chain} {
    on_unbusy {%1 {on_unbusy {%2 {on_unbusy {%3 {on_unbusy {%4 {on_unbusy {%5 {on_unbusy {%6 {on_unbusy {%7 {on_unbusy {%8 {on_unbusy {%9 {on_unbusy {%10 {on_unbusy {%11 {on_unbusy {%12;};};};};};};};};};};};};};};};};};};};};};};};
};

#alias {sell.all} {
    #alias tmp_sell #cr;
    #alias tmp_sell %1;
    #alias {sell_weapon} {
        on_there {
            sell all;
            #delay {3} {
                sell_other;
            };
        };
        gt rbz;
    };

    #alias {sell_other} {
        #class sell_other.inner open;
        #action {你身上没有puti zi} {
            #ticker {sell_other} {
                sell baicao dan;
            } {1};
        };
        #action {你身上没有baicao dan} {
            #class sell_other.inner kill;
            #unticker {sell_other};
            #delay {3} {
                tmp_sell;
            };
        };
        #class sell_other.inner close;
        on_there {
            #ticker {sell_other} {
                sell puti zi;
            } {1};
        };
        gt 扬州当铺;
    };
    sell_weapon;
};

#alias {repair} {
    #alias tmp_repair #cr;
    #alias tmp_repair %1;
    #if {${min_naijiu} < 350} {
        #action {抵达目的地} {
            #unaction {抵达目的地};
            e;ne;
            #delay {2} {
                #foreach {${my_weapons}[%*]} {weapon} {
                    fix ${weapon};
                };
                play repair.wav;
                #delay {3} {
                    sw;w;
                    #delay {3} {
                        tmp_repair;
                    };
                };
            };
        };
        gt ly;
    };
    #else {
        tmp_repair;
    };
};

#function {py} {
    INVOKE pinyin %0;
};

#alias {n} {north;look};
#alias {s} {south;look};
#alias {e} {east;look};
#alias {w} {west;look};
#alias {u} {up;look};
#alias {d} {down;look};
#alias {ne} {northeast;look};
#alias {sw} {southwest;look};
#alias {nw} {northwest;look};
#alias {se} {southeast;look};
#alias {nd} {northdown;look};
#alias {su} {southup;look};
#alias {nu} {northup;look};
#alias {sd} {southdown;look};
#alias {eu} {eastup;look};
#alias {wd} {westdown;look};
#alias {ed} {eastdown;look};
#alias {wu} {westup;look};

#list kaimen_actions create {open;push;pull;break};
#list kaimen_names create {door;gate;men;stone};
#alias {kaimen} {
    #gag 什么？;
    #foreach {${kaimen_actions}[%*]} {kaimen_action} {
        #foreach {${kaimen_names}[%*]} {kaimen_name} {
            #show ${kaimen_action} ${kaimen_name};
            ${kaimen_action} ${kaimen_name};
        };
    };
    #delay {1} {
        #ungag 什么？;
    };
};

#alias {on_echo} {
    #alias tmp_echo #cr;
    #alias tmp_echo %0;
    #action {^>} {
        #unaction {^>};
        tmp_echo;
    };
};

#alias {l} {
    #ungag {^$};
    #send {l %0};
    #delay {gag_delay} {
        #gag {^$};
    } {1.5};
    #action {^>} {
        #unaction {^>};
        #gag {^$};
    }
};

#macro {\eL} {
    show.reset;
};

#alias {INVOKE} {
    #script {file_name} {python3 -m bin.%0 ${char_id}};
    #var file_name ${file_name}[1];
    #if {"${file_name}" != ""} {
        #read ${file_name};
        #system {rm ${file_name}};
    };
};

#var pid 0;
#alias {check_heart_beat} {
    #delay {check_heart_beat_delay} {
        #if {${pid} != 0} {
            #system {kill -30 ${pid}};
            end_and_restart;
        };
    } {120};
};

#event {SESSION DEACTIVATED} {
    #if {"%0" == "pkuxkx"} {
        #if {${pid} != 0} {
            #system {kill -30 ${pid}};
            end_and_restart;
        };
    };
};

#alias {end_and_restart} {
    #end;
};

#alias {end} {
    #unevent {SESSION DEACTIVATED};
    unset_last_quest;
    #end;
};

#alias {quit_and_restart} {
    #class quit.inner.open;
    #action {你丢下} {
        #class quit.inner kill;
        #end;
    };
    #ticker {quit} {
        #send {quit};
    } {3};
    #class quit.inner.close;
    #send {quit};
};

#alias {quit} {
    #unevent {SESSION DEACTIVATED};
    unset_last_quest;
    quit_and_restart;
};

#alias {set_last_quest} {
    #var last_quest %1;
    xmpp.status ${last_quest};
    @setenv{last_quest;${last_quest}};
};

#alias {unset_last_quest} {
    #var last_quest nil;
    xmpp.status ${last_quest};
    @setenv{last_quest;nil};
};

#alias {restart_last_quest} {
    #var last_quest @getenv{last_quest};
    #if {"${last_quest}" != "nil"} {
        ${last_quest}${dot}start;
    };
};

#alias {notify} {
    play alert.wav;
    show_to_info %0;
    #nop desktop.notify %0;
    xmpp.notify %0;
};

#alias {corpse} {
    get all from corpse;
};

#alias {on_server_reboot} {
    #showme INFO: 服务器重启!;
};

#alias {shifu} {
    gt $shifu_pos;
};

#alias walk {
    #alias tmp_walk_to #cr;
    #alias tmp_walk_to %1;

    #class on_walk open;
    #action {^%S - } {
        #class on_walk kill;
        #undelay walk_delay;
        #showme {ROOM_CHANGED};
    };
    #delay walk_delay {
        #class on_walk kill;
        #showme {ROOM_NOT_CHANGED};
    } {3};
    #class on_walk close;

    tmp_walk_to;
};

#alias {chifan} {
    #alias chifan_action #cr;
    #alias chifan_action %1;
    #class chifan open;
    #action {你身上没有这样东西。} {
        get_wan;
    };
    #action {GOT_WAN} {
        eat wan;
    };
    #action {你捏起一颗小小的辟谷丸往舌下一放。} {
        #class chifan kill;
        #showme CHIFAN_DONE;
        chifan_action;
    };
    #action {STATUS_UPDATED} {
        #unaction {STATUS_UPDATED};
        #if {${food_percent} < 20 || ${water_percent} < 20} {
            eat wan;
        };
        #else {
            #class chifan kill;
            #showme CHIFAN_DONE;
            chifan_action;
        };
    };
    #class chifan close;
    #send {hp};
};

#action {你储存了%*点潜能！} {
    #math saved_qn %1;
    @setenv{qn;${saved_qn}};
};

#alias {cun_qn} {
    #alias save_qn_action #cr;
    #alias save_qn_action %1;

    #alias {cun_qn_done} {
        #delay {3} {
            #showme SAVE_QN_DONE;
            save_qn_action;
        };
    };
    gt 潜能银行;
    on_there {
        deposit ${qn};
        account;
        cun_qn_done;
    };
};

#alias {qu_qn} {
    #alias qu_qn_action #cr;
    #alias qu_qn_action %1;

    #alias {qu_qn_done} {
        #delay {3} {
            #showme QU_QN_DONE;
            qu_qn_action;
        };
    };
    gt 潜能银行;
    on_there {
        withdraw %1;
        account;
        qu_qn_done;
    };
};

#alias {gift.start} {
    #ticker {gift} {
        play; place; play; yun refresh; yun recover;
    } {2};
};

#alias {gift.stop} {
    #unticker {gift};
};

#alias {yun} {exert};
#alias {cun} {deposit};
#alias {qu} {withdraw};

#function {getenv} {
    #var result @mapget{env;%1};
};

#function {setenv} {
    @mapset{env;%1;%2};
    #var result #cr;
    #delay {set_env_delay} {
        #class env write char/${char}_env${dot}tin;
    }{3};
};
